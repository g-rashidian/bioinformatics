* BLAST
** BLASTN - NCBI web interface
Make nucleotine blast  search against following sequence:
#+begin_src text
>gi|202471|gb|M57671.1|OCOINS Octodon degus insulin mRNA, complete cds
GCATTCTGAGGCATTCTCTAACAGGTTCTCGACCCTCCGCCATGGCCCCGTGGATGCATCTCCTCACCGT
GCTGGCCCTGCTGGCCCTCTGGGGACCCAACTCTGTTCAGGCCTATTCCAGCCAGCACCTGTGCGGCTCC
AACCTAGTGGAGGCACTGTACATGACATGTGGACGGAGTGGCTTCTATAGACCCCACGACCGCCGAGAGC
TGGAGGACCTCCAGGTGGAGCAGGCAGAACTGGGTCTGGAGGCAGGCGGCCTGCAGCCTTCGGCCCTGGA
GATGATTCTGCAGAAGCGCGGCATTGTGGATCAGTGCTGTAATAACATTTGCACATTTAACCAGCTGCAG
AACTACTGCAATGTCCCTTAGACACCTGCCTTGGGCCTGGCCTGCTGCTCTGCCCTGGCAACCAATAAAC
CCCTTGAATGAG
#+end_src
*** search I
setting of the search:
- In the section "Program Selection" select the option "Somewhat similar
  sequences (blastn)"
- Choose "Nucleotide collection (nr/nt)" as the search database. NR is the "Non
  Redundant" database, which contains all non-redundant (non-identical)
  sequences from GenBank and the full genome databases.
- Check "Show results in a new window" and  Click the BLAST button to launch the search.
After the search has completed, make yourself familiar with the BLAST output page. After a header with some information about the search, there are four main parts:

**** Graphic Summary
each hit is represented by a line showing which part of the query sequence the alignment covers. The lines are coloured according to alignment score.
**** Descriptions
a table with a one-line description of each hit with some alignment statistics, The columns in the Descriptions table are:
- Description — the description line from the database
- Max score — the alignment score of the best match (local alignment) between the query and the database hit
- Total score — the sum of alignment scores for all matches (alignments) between the query and the database hit (if there is only one match per hit, these two scores are identical)
- Query cover — the percentage of the query sequence that is covered by the alignment(s)
- E value — the Expect value calculated from the Max score (i.e. the number of unrelated hits with that score or better you would expect to find for random reasons)
- Ident — the percent identity in the alignment(s)
- Accession — the accession number of the database hit.
**** Alignments
the actual alignments between the query and the database hits.
**** Taxonomy
Taxonomic summary of all positive hits 

First, take a look at the best hit. Since our search sequence (the query) was taken from GenBank which is part of NR, we should find an identical sequence in the search. Make sure this is the case!
Find the best hit from human (Homo sapiens) that is not a synthetic construct
and answer following questions:
- what is the identifier (Accession)?
- what is the alignment score ("max score")?
- what is the percent identity and query coverage?
- what is the E-value?
- are there any gaps in the alignment?
*** Search II
Make a new BLASTN search with the same query sequence, this time with select database
 to Human genomic + transcript (Human G+T). For the best hits answer following:
- what is the identifier (Accession)?
- what is the alignment score ("max score")?
- what is the percent identity and query coverage?
- what is the E-value?
- are there any gaps in the alignment?
Compare hit of this search with hit from previous search.  You may have noticed
that the E-value changed, while the alignment score did not. Why?

*Hint*:  Expand the "Search summary" section near the top by clicking it. Compare
E values and  the sizes (in basepairs) of the databases we used for the two BLAST searches

** BLASTP - NCBI web interface
The following is the product of a gene in C. elegans that seems to be important in development.
#+begin_example
>C.elegans protein
MFHPGMTSQPSTSNQMYYDPLYGAEQIVQCNPMDYHQANILCGMQYFNNSHNRYPLLPQMPPQFTNDHPY
DFPNVPTISTLDEASSFNGFLIPSQPSSYNNNNISCVFTPTPCTSSQASSQPPPTPTVNPTPIPPNAGAV
LTTAMDSCQQISHVLQCYQQGGEDSDFVRKAIESLVKKLKDKRIELDALITAVTSNGKQPTGCVTIQRSL
DGRLQVAGRKGVPHVVYARIWRWPKVSKNELVKLVQCQTSSDHPDNICINPYHYERVVSNRITSADQSLH
VENSPMKSEYLGDAGVIDSCSDWPNTPPDNNFNGGFAPDQPQLVTPIISDIPIDLNQIYVPTPPQLLDNW
CSIIYYELDTPIGETFKVSARDHGKVIVDGGMDPHGENEGRLCLGALSNVHRTEASEKARIHIGRGVELT
AHADGNISITSNCKIFVRSGYLDYTHGSEYSSKAHRFTPNESSFTVFDIRWAYMQMLRRSRSSNEAVRAQ
AAAVAGYAPMSVMPAIMPDSGVDRMRRDFCTIAISFVKAWGDVYQRKTIKETPCWIEVTLHRPLQILDQL
LKNSSQFGS
#+end_example
Use the protein-protein blast page to perform search against the non redundant
protein database (nr) to identify protein and find its homologs.

blast link : https://blast.ncbi.nlm.nih.gov/Blast.cgi

- Based on the identical hit to C. elegans what is the identity of this protein? 
# show how you can get from blast result to ncbi proein and uniprot record
#  Dwarfin sma-4, involved in TGF-beta pathway
- Aside from the C. elegans proteins, what is the most significant hit? What is
  its identity and E-value?
- switch for "graphic summary" - for blastp there is additional information
  about identified conserved domains.
# hypothetical protein FL83_19826 [Caenorhabditis latens], pval 0 but shorter alignemnt
- Check also taxonomy report. How many hits was found total. How many hits was
  found in "chordata" taxonomy group.
- Use edit and resubmit  to modify blast search.  In new search, use DELTA-BLAST
  algorithm.
# this make only sense when student are familiar with psi and delta blast
- How many similar protein is found with DELTA-BLAST, How many is in vertebrates
- Use edit and resubmit  to modify blast search.  In new search, use DELTA-BLAST
  algorithm. and additionally search only in vertebrates taxon (Organism is set
  to vertebrates (taxid:7742)
- What is the best hit in vertebrates. What is its accession, organism, Evalue,
  Identity and Similarity)

** BLASTX - NCBI web interface
The part of genomic sequence of Twort bacteriophage is bellow. Use BLAST to
search protein database  (Non-redundant protein sequences  - nr) to find
homologous protein from other bacteriophages and viruses.
- For search try to use Blosum62 and Blosum45 scoring matrix. What is the
  difference between searches with different matrices
- What proteins (Accessions) has alignment with E value < 1e-10

#+begin_example
>Staphylococcus phage Twort, partial sequence
AAAGATGCAGAGTTAGCTGTAATGGAAATCAACAAAAAACAATTGGAGGACTAATCT
TAATGAGTAAATTTTCAAATATTCTAGAAGAATATAATAAATTACAATCACAAGATG
TTGAAAAATCATTAGAAGAAAATAAAGATGAAGAACCTAAAGAAGAGGCTACTGTAG
AATCAGTTACGGAAGAACAAGTAGTTGAAACAGATGCACCGCAAAAAGAAGAACCAC
AACAAGTATCTGAAGAAGACGCTAAAAAAGCACAAGAAGAATCTAAGAAATTAGAAT
CAGAAAAGCAAGAAGAAGATAAAGAAGTAGAGAAGTCTGTTAAAGATTCTAAAGACC
CAGTAGACCATAAAGATACTAAAACTGAAGACAAAGACAATGAGAAACGTAAAAACA
AAAAAGAAGATAAAGAAGACGAGTCTAAAGAAGAAGATGAAAAAGAATCTAAGAAAG
ATAAAGACAAAGAAGATAAAAAGTCTGAAAACAAAAAAGATTCTGAAAAAGTTAAAA
AGTCAGCTTTATCTGATGAAGATATTGTAGAAGGATTTAGTACAGTATTAAAATCTT
TACAAGACTTACCTAAACAATTTGCTACTAAAGATGATGTCAAGGAAATTAAAAAAT
CTTTAGAAGAATTACAAGATGCTTTTGCTGAAAAAGAAAAGAAACAAGAAGAAAAAG
TAGAAACTATTAAAGAAGAAGTTAACAAAGAACAAGAAGATAAAGAAGAAGAAAATA
CTGATGAATCAGTAGAAAAATCAGTAACAACTTCTAACACTGCACAGCAAGATGATG
TTAATTATGTTTCTAAATCAGCAGTTGTAGAAGAAGAAGTACAAGAGGAACAACCTG
AGGAAGATAAGCAAGAGGTTAATACAATTACACAAGAAGACCGTGAGGCTTTCATGA
ATAAATTCAAATCAGAATCTCAACGTCGTGACAAACCTACACGTCAATTAAATGATG
CATATTTAGCATATATGGACGTTCGTAATAATGGTGAAAATGCAAGTCCAAGTTCTT
TAAAAACTGTTAAAGATTTTATTAAGTAATACAAAGTAGTTGTGTTATATTATACAT
GAAATTAAATTAATAAAA
#+end_example

#+begin_comment
- show *Recent resuts* menu
- distance tree view (in blastp results)
#+end_comment

** Identification of coding sequence using blastx vs blastn
characterization of unknown DNA PCR amplified fragment from unknown
non-cultivatable microorganism
#+begin_example
>clone12
AACGGGCACGGGACGCATGTAGCTGGAACAGTGGCAGCCGTAAATAATAATGGTATCGGA
GTTGCCGGGGTTGCAGGAGGAAACGGCTCTACCAATAGTGGAGCAAGGTTAATGTCCACA
CAAATTTTTAATAGTGATGGGGATTATACAAATAGCGAAACTCTTGTGTACAGAGCCATT
GTTTATGGTGCAGATAACGGAGCTGTGATCTCGCAAAATAGCTGGGGTAGTCAGTCTCTG
ACTATTAAGGAGTTGCAGAAAGCTGCGATCGACTATTTCATTGATTATGCAGGAATGGAC
GAAACAGGAGAAATACAGACAGGCCCTATGAGGGGAGGTATATTTATAGCTGCCGCCGGA
AACGATAACGTTTCCACTCCAAATATGCCTTCAGCTTATGAACGGGTTTTAGCTGTGGCC
TCAATGGGACCAGATTTTACTAAGGCAAGCTATAGCACTTTTGGAACATGGACTGATATT
ACTGCTCCTGGCGGAGATATTGACAAATTTGATTTGTCAGAATACGGAGTTCTCAGCACT
TATGCCGATAATTATTATGCTTATGGAGAGGGAACATCCATGGCTTGTCCACATGTCGCC
GGCGCCGCC
#+end_example


- use =blastn= and =blastx= to characterize clone12. What tool is relevant to use?
- check DNA sequence using ORFfinder https://www.ncbi.nlm.nih.gov/orffinder
- use =blastp= against longest ORF, compare results with blastx search. 
- What kind of enzyme is coded by =clone12=?
- does the clone12 represent complete CDS of putative protein?
#+begin_comment
in blastx AA alignment is truncated probably because of low complexity
filtering, turn of filtering and run in again.
Use *job name* for all searches and show history of searches
#+end_comment
- compare best hit from blastx directly using tblastx against DNA sequence of
  clone12
  - click on accession - this will take you to protein entry. 
  - on protein entry page, click on left panel on *run BLAST*
  - select * tblastn* - query is a protein accession (this represent query)
  - select ~Align two or more sequences~
  - second sequence is clone12 nucleotide sequence
  - run blast and explore results
  - inspect also dotplot page

** Using BLAST (blast2seq) to create local aligment for two sequences:
Two sequences can be also compared using BLAST web interface. For comparison use:
(two align two sequences to each other - click on checkbox *Align two or more sequences*  in NCBI BLAST form)
- =ERB2_HUMAN= : http://www.uniprot.org/uniprot/P04626.fasta   
- =EGFR_DROME= : http://www.uniprot.org/uniprot/P04412.fasta  
paste these sequences to BLAST form. Use blastp.
  
https://blast.ncbi.nlm.nih.gov/Blast.cgi?BLAST_SPEC=blast2seq&LINK_LOC=align2seq&PAGE_TYPE=BlastSearch
blast2seq can be used instead of =needle=. It also provide graphical view of alignment and non-interactive dotplot. Use blast2 seq on  =P04626.fasta= and  =P04412.fasta= sequences and explore results. Compare alignments and dotplot.

Alternativelly, it is possible to enter can use just accession ID to search window (P04626, P04412).

* Use of BLAST from command line

When to use blast from CLI:
- If you have large number of queries (it is possible do download whore =nr= database and run blast localy)
- When your sequence database is not part of public databases (NCBI, EBI,...)
- If you need to automate your similarity search
- More detailed manual can be found at https://www.ncbi.nlm.nih.gov/books/NBK279684/


** Basic commands:

=makeblastdb=, =blastn=, =blastp=, =blastx=, =tblastx=
#+begin_comment
explan differences in commands
#+end_comment

Basic use of blast commands
#+BEGIN_SRC bash
  makeblastdb -help
  blastn -help
  # create database:
  makeblastdb -dbtype nucl -in  dna_sequences.fasta
  # or for proteins:
  makeblastdb -dbtype prot -in  prot_sequences.fasta
  # nucleotide - nucleotide search
  blastn -db database_file -query query_sequences.fasta -out output_file
#+END_SRC


The most used blast options:
#+begin_example
-db <String>
   BLAST database name

-out <File_Out>
   Output file name
   Default = `-'

-evalue <Real>
   Expectation value (E) threshold for saving hits 
   Default = `10'

-word_size <Integer, >=4>
   Word size for wordfinder algorithm (length of best perfect match)

-outfmt <String>
   output format
#+end_example
for complete options type =blastn -help=



** blastp exercise 1

*** files in exercise:
- query : =~/Desktop/bioinformatics/data/blast_data/proteins.fasta=
- database : =~/Desktop/bioinformatics/data/blast_data/db/pdbaa=
#+begin_comment
input sequenc contain two proteins - sequence1 and sequence2
sequence1: is cytochome c oxidase subunit )
sequence2: -HIV1 envelope protein
db is fraction od blast protein database

#+end_comment

run protein blast with default parameters in terminal
#+BEGIN_SRC bash

mkdir blast_search
cd blast_search
# copy query and database to directory with data:  
cp ~/Desktop/bioinformatics/data/blast_data/proteins.fasta .
cp ~/Desktop/bioinformatics/data/blast_data/db/pdbaa .

# inspect the query file  protein.fasta
cat proteins.fasta
seqkit stats proteins.fasta
# inspect fasta file we will use as database
seqkit stat pdbaa



# fasta file db/pdbaa will be used as database, it must be formated using
# makeblastdb command to make data blast compatible
makeblastdb -in pdbaa -dbtype prot
# after succesfull creation of database, information about size of database is printet to stdout
# Additional files in db directory were created, what are these files?
ls -l 

# run blastp with default settings:
blastp -query proteins.fasta -db pdbaa -out proteins_blastp_default.txt
# inspect output with less command or text editor
less proteins_blastp.txt
#+END_SRC



try command line blast with different parameters:
#+BEGIN_SRC bash
# see all passoble blast options:
blastp -h
# or
blast -help
# blast documentation is long, it can be more convenient pipe it to less
blast -help | less
  #+END_SRC
The most important blastp/blastn options:
- =-task= type of algorithm for search (blast/megablast for blastn or blastp/blastp-fast for blastp)
- =-outfmt= output format
- =-word_size=
- -=evalue=
- =-num_alignments= Number of database sequences to show alignments for (Default = 250)


#+BEGIN_SRC bash
# default:
  blastp -query proteins.fasta -db pdbaa -out proteins_blastp_align_all.txt
# limit output to 10 alignments
  blastp -query proteins.fasta -db pdbaa -out proteins_blastp_align.txt -num_alignments 10
# return max 10 alingments, hits must be e-value 1e-30 or less
  blastp -query proteins.fasta -db pdbaa -out proteins_blastp_align_1e-30.txt -num_alignments 10 -evalue 1e-30
# tabular ouput with descriptions
  blastp -query proteins.fasta -db pdbaa -out proteins_blastp_1e-30_table.txt -evalue 1e-30 -outfmt 7
# plain tabular output
  blastp -query proteins.fasta -db pdbaa -out proteins_blastp_1e-30_table.txt -evalue 1e-30 -outfmt 6
# simple html output
  blastp -query proteins.fasta -db pdbaa -out proteins_blastp_1e-30.html -evalue 1e-30 -outfmt 2 -html
# inspect all output using less command
# html output should be viewed in firefox!
#+END_SRC

#+begin_comment
show tabular output in libreoffice
#+end_comment


** blastp exercise 2 : extract hits from database and create alignment with query:
The aim of this exercise is to perform a BLASTP search against a protein
database using a single query sequence and subsequently analyze the
results, extracting hit information, retrieving and ordering the hit sequences,
and finally, creating a multiple sequence alignment.

#+begin_src bash
# Run BLASTP search
cd 
mkdir blast_search2
cd blast_search2
# copy query and database to directory with data:  
cp ~/Desktop/bioinformatics/data/blast_data/query2.fasta .
cp ~/Desktop/bioinformatics/data/blast_data/db/pdbaa .
makeblastdb -in pdbaa -dbtype prot


blastp -query query2.fasta -db pdbaa -out query_blastp_1e-10_table.txt -evalue 1e-10 -outfmt 6

# Inspect the structure of the output from BLAST using the 'less' command
less query_blastp_1e-10_table.txt

# The columns in the tabular output are:
# 1.qaccver 2.saccver 3.pident 4.length 5.mismatch 6.gapopen
# 7.qstart 8.qend 9.sstart 10.send 11.evalue 12.bitscore

# Extract a list of sequence IDs:
# Extract the second column from the BLAST output, which contains the database IDs

# Count the number of hits for the query sequence
wc query_blastp_1e-10_table.txt

cut -f 2 query_blastp_1e-10_table.txt > all_hits_id.txt
seqkit grep -f all_hits_id.txt pdbaa -o all_hits.fasta
seqkit stats  all_hits.fasta


# Explore the extracted sequences with Dotter
dotter query2.fasta all_hits.fasta

# Extract sequences in the order of hit significance
cdbfasta pdbaa
# If cdbfasta is not installed, use the following command to install it:
sudo apt install cdbfasta

# Create a binary index of the FASTA file for fast sequence retrieval
cat all_hits_id.txt | cdbyank pdbaa.cidx > all_hits_in_order.fasta

# Check the ordered sequences using the Dotter program
dotter query2.fasta all_hits_in_order.fasta

# Create an alignment with the query protein
cat query2.fasta all_hits_in_order.fasta > query_with_hits.fasta

# Create a multiple sequence alignment using the MAFFT program
mafft --help
mafft query_with_hits.fasta > query_with_hits_aligned.fasta

# Inspect the aligned sequences with the 'less' command
less query_with_hits_aligned.fasta

# View the alignment with the Jalview program

#+end_src



** blastp exercise 3 : extract hits from database and create alignment with query proteins:
#+begin_comment
TODO  introduce cut and grep commands
discuss =less - S=
discuss type of sequence id in fasta - what is behind the first space

- explain =seqkit grep=  (see help)  The order of sequences in result is consistent with that in original
       file, not the order of the query patterns.

#+end_comment


#+begin_src bash

blastp -query proteins.fasta -db db/pdbaa -out proteins_blastp_1e-10_table.txt -evalue 1e-10 -outfmt 6
# see structure of output from blast - use less command

# column in the tabular output are:
# 1.qaccver 2.saccver 3.pident 4.length 5.mismatch 6.gapopen
# 7.qstart 8.qend 9.sstart 10.send 11.evalue 12.bitscore

# we want extract list of sequence ids:
# extract second column from blast output - it contains ID from database
cut -f 2 proteins_blastp_1e-10_table.txt > all_hits_id.txt
seqkit grep -f  all_hits_id.txt db/pdbaa -o all_hits.fasta


# now lets exctract id of positive hits against sequence1
cat proteins_blastp_1e-10_table.txt | grep "sequence1" | cut -f 2 > hits_to_seq1.txt
cat proteins_blastp_1e-10_table.txt | grep "sequence2" | cut -f 2 > hits_to_seq2.txt

# how many hits was against sequence1 or sequence2 ?
wc hits_to_seq?.txt

seqkit grep -f hits_to_seq1.txt db/pdbaa -o seq1_hits.fasta
seqkit grep -f hits_to_seq2.txt db/pdbaa -o seq2_hits.fasta

#explore extracted sequences with dotter
dotter proteins.fasta seq1_hits.fasta
dotter proteins.fasta seq2_hits.fasta

# how to extract sequences in order of hit significance? 
cdbfasta db/pdbaa
# !! if cdbfasta is not installed used:
sudo apt install cdbfasta


# this creates file pdbaa.cidx
# this is binary index of fasta file - it can be used for fast retriever of sequences
cat hits_to_seq1.txt | cdbyank db/pdbaa.cidx > seq1_hits_in_order.fasta
cat hits_to_seq2.txt | cdbyank db/pdbaa.cidx > seq2_hits_in_order.fasta

#check using dotter program:
dotter proteins.fasta seq1_hits_in_order.fasta
dotter proteins.fasta seq2_hits_in_order.fasta

# create alignment with query protein:
seqkit grep -p "sequence2" proteins.fasta > query_with_hits.fasta
cat seq2_hits_in_order.fasta >> query_with_hits.fasta

# create multiple sequence alignment:
# we well usee mafft program
mafft --help
mafft query_with_hits.fasta > query_with_hits_aligned.fasta
# inspect  query_with_hits_aligned.fasta with less command
less query_with_hits_aligned.fasta


# view alignemnt with jalview program



#+end_src
** blast against remote database -  exercise 3
Instead of having to download the entirety of NR or other NCBI databases, we can BLAST against the version held on the website. This ensures we have the most up to date version but is also significantly slower. We use the -remote command to do this. Lets BLAST out sequences against NR held on the NCBI website by typing:
#+begin_comment
take  too long or does not work at all
#+end_comment
#+begin_src bash
blastp -query proteins.fasta -remote -db nr -out proteins_nr.txt -outfmt 6 -evalue 1e-30
#+end_src

#+begin_src bash
# install  NCBI Entrez utilities on the command line
sudo apt install ncbi-entrez-direct

#+end_src

** blast - exercise 4
- visit ftp://ftp.ncbi.nih.gov/refseq/M_musculus/mRNA_Prot
- there are several file with protein sequences named =*protein.faa.gz=
- download these sequences, you can use web browser of you can try to use =wget= command.
  Note that  =wget= command can accept wildcards like {1..3}
- unzip downloaded fasta  ( use =gunzip= command)
- concatenate all fasta files into one (use =cat= commad)
- create blast database (=makeblastdb=)
- inspect restuls
- query sequence is protein from Danio rerio, you fill find it in =~/Desktop/bioinformatics/data/blast_data/danio_rerio_proteins.fasta=
- use =blastp= and find best hit to Danio rerio protein in Mus musculus refseq sequences
- what are these sequences, what is identity and e-value of the best hits
- which protein has more hits by blast
    
* Localization of sequences in genome using BLAT in Ensemble genome

Use BLAT to find location of the sequence in Caenorabditis elegans genome. For
search, use Ensemble database: https://www.ensembl.org/index.html

#+begin_example
>C.elegans unkown sequence
GAATATTTAGGAGATGCAGGAGTTATTGATAGCTGCAGTGATTGGCCGAACACACCTCCT
GATAACAATTTTAATGGTAAGAGTTGAACTCCAAAACTGTAAGTAGAGGTGGCTGCTCTC
TCTCTCTGACTTTTATGCCTGCCTACGTACCTTCTAATACTTATTTGTTTGATATGGATG
TTTAGTGAAGATAAAGGGTAGATAGAGGCATTTCTCATCTGCCCAAGATGAGCATGAATA
TATTTAATACAAAATCAACACTGAGAATTTTAGAGACCGATTTTAAATGTGACCCAATTT
TTTTCAGGAGGATTTGCACCAGATCAACCTCAGCTAGTCACACCGATTATTTCTGATATT
CCGATAGATCTCAATCAAATATATGTTCCAACACCTCCACAATTACTTGATAATTGGTGT
TCAATCATTTATTATGAACTGGATACACCCATTGGTGAAACCTTTAAGGTATGTTTTTCT
ATGAAATCTGATGACTATTCATTCATGGTGCAAATCGCCTAGAAATTTTTGTGAAAGAGC
#+end_example

- What is the genomic location of sequences. Is the sequence part of any gene?

